@*
    <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorWasmDotNet8AspNetCoreHosted.Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
    </div>
*@
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IClientAuthService ClientAuthService


@* <div class="d-flex justify-content-center mt-5">
    <MudImage Src="@avatar" Style="width: 120px; height:120px;"></MudImage>
</div>
<div class="d-flex justify-content-center mt-2 mb-5">
    <span style="color:white; font-size:17px; margin-top: 6px; font-weight: 500; text-align: center">@avatar</span>
</div> *@

<MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
 <MudNavMenu Class="mud-width-full" @onclick="ToggleNavMenu">
        <MudTd><MudAvatar Image="@avatar" Style="width: 120px; height:120px;" /></MudTd>
        <MudText Typo="Typo.h6" Class="px-4" text-align: center>@userName</MudText>
        <MudDivider Class="my-2" />
            <MudNavLink Href="" 
                Match="NavLinkMatch.All" 
                Icon="@Icons.Material.Filled.Dashboard" 
                IconColor="Color.Tertiary">Dashboard
            </MudNavLink>

           <AuthorizeView Roles="Admin">
               <Authorized>
                    <MudNavLink Href="all-student" 
                        Icon="@Icons.Material.Filled.Person" 
                        IconColor="Color.Tertiary">Students
                    </MudNavLink>
                </Authorized>
            </AuthorizeView>
            
            <AuthorizeView Roles="Admin">
               <Authorized>
                    <MudNavLink Href="all-professor" 
                        Icon="@Icons.Material.Filled.Person" 
                        IconColor="Color.Tertiary">Professors
                    </MudNavLink>
            </Authorized>
        </AuthorizeView>
       
            <AuthorizeView Roles="Student">
               <Authorized>
        <MudNavGroup Title="Subjects" 
            @bind-Expanded=_subjectIsExpanded
            Icon="@Icons.Material.Filled.Subject" 
            IconColor="Color.Tertiary">

                <MudNavLink>
                    Enroll
                </MudNavLink>
                </MudNavGroup>
            </Authorized>
        </AuthorizeView>

        
        <AuthorizeView Roles="Student">
               <Authorized>
                    <MudNavGroup 
                        Title="Books"
                        @bind-Expanded=_bookIsExpanded
                        Icon="@Icons.Material.Filled.LibraryBooks"
                        IconColor="Color.Tertiary">

                        <MudNavLink 
                            Icon="@Icons.Material.Filled.Settings">
                            Manage
                        </MudNavLink>
                    </MudNavGroup>
            </Authorized>
        </AuthorizeView>

         <AuthorizeView Roles="Admin">
            <Authorized>
                <MudNavLink Href="all-subject"
                    Icon="@Icons.Material.Filled.Subject" 
                    IconColor="Color.Tertiary">Subjects
                </MudNavLink>
            </Authorized>
        </AuthorizeView>

          <AuthorizeView Roles="Admin">
              <Authorized>
                <MudNavLink Href="all-book" 
                    Icon="@Icons.Material.Filled.LibraryBooks"
                    IconColor="Color.Tertiary">Books
                </MudNavLink>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>
                <MudNavLink 
                    Href="all-user" 
                    Icon="@Icons.Material.Filled.People" 
                    IconColor="Color.Tertiary">Users
                </MudNavLink>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>
                <MudNavLink 
                    Href="all-enrollment" 
                    Icon="@Icons.Material.Filled.AddCard" 
                    IconColor="Color.Tertiary">Enrollment
                </MudNavLink>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>
                 <MudNavLink 
                    Href="all-library" 
                    Icon="@Icons.Material.Filled.LibraryAdd" 
                    IconColor="Color.Tertiary">Library
                </MudNavLink>
            </Authorized>
         </AuthorizeView>

         <AuthorizeView Roles="Admin">
            <Authorized>
            <MudNavLink 
                Href="register-user" 
                Icon="@Icons.Material.Filled.PersonAdd" 
                IconColor="Color.Tertiary">Register
            </MudNavLink>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>
            <MudNavLink 
                Href="login" 
                Icon="@Icons.Material.Filled.Login" 
                IconColor="Color.Tertiary">Login
            </MudNavLink>
            </Authorized>
        </AuthorizeView>

  </MudNavMenu>

</MudPaper>

@code 
{
    public string avatar;
    private bool collapseNavMenu = true;
    bool _subjectIsExpanded = false;
    bool _bookIsExpanded = false;
    private ClaimsPrincipal user;
    private string userName;
    private string userId;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        avatar = await ClientAuthService.GetSingleUserAvatar();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        userName = user.Identity.Name;
        // If the Name claim is not present, try fetching the NameIdentifier claim
        if (string.IsNullOrEmpty(userName))
        {
            userName = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        }

        userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    }
}
