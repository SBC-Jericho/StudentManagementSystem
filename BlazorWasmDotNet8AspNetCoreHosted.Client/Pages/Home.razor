@page "/"
@using System.Security.Claims
@using BlazorWasmDotNet8AspNetCoreHosted.Client.Pages.Admin
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly
@inject IClientAnnouncementService ClientAnnouncementService
@inject NavigationManager NavigationManager

@inject ILocalStorageService _localStorage
<PageTitle>Dashboard</PageTitle>

<AuthorizeView>
    <Authorized>

        <MudText Typo="Typo.h2">Welcome, @context.User?.Identity?.Name</MudText>
        </Authorized>
</AuthorizeView>

@*
    @if (isConnected)
{
    @foreach (var message in messages)
    {
        <MudCard Class="mt-2">
            <MudCardContent>
                <MudText>Announcement</MudText>
                <MudText Typo="Typo.body2">@message</MudText>
                </MudCardContent>
            </MudCard>
    }
} *@


@code
{
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string title;
    private string messageInput;

    public List<Announcement> announcement = new List<Announcement>();

    // protected override async Task OnInitializedAsync()
    // {
     
    // if (hubConnection == null)

    //     {
    //         string token = await _localStorage.GetItemAsStringAsync("token");

    //         string foo = token.Replace("\"", "");

    //         hubConnection = new HubConnectionBuilder()

    //         .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"), options =>
    //         {
    //             options.AccessTokenProvider = async () => foo;

    //         }).WithAutomaticReconnect().Build();

    //         await hubConnection.StartAsync();

    //     }
       
    // }

}
