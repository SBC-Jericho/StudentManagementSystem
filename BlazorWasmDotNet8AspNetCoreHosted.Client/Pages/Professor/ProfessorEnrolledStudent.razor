@page "/student-enrolled-subject"
@page "/student-enrolled-subject/{id:int}"

@inject IClientSubjectService ClientSubjectService
@inject IClientEnrolledSubjectsService ClientEnrolledSubjectsService
@inject IClientStudentService ClientStudentService
@inject IClientProfessorService ClientProfessorService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar


<MudTable Items="enrolledSubjects"
          Hover="true"
          Striped="true"
          Dense="true"
          Class="mb-2">

    <HeaderContent>
        <MudTh>Students</MudTh>
        <MudTh>Subjects</MudTh>
        <MudTh>Semester</MudTh>
        <MudTh>School Year</MudTh>
    </HeaderContent>

    <RowTemplate>
            <MudTd DataLabel="Semester">@context.Enrollment.Student.LastName</MudTd>
            <MudTd DataLabel="Subject">@context.Subject.Name</MudTd>
            <MudTd DataLabel="Semester">@context.Enrollment.Semester</MudTd>
            <MudTd DataLabel="SchoolYear">@context.Enrollment.SchoolYear</MudTd>
        </RowTemplate>
    </MudTable>


    @code {

    [Parameter]
    public int? Id { get; set; }

    public List<EnrolledSubjects> enrolledSubjects = new List<EnrolledSubjects>();
    
    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var result = await ClientEnrolledSubjectsService.GetSingleEnrolledStudent((int)Id);
            if (result is not null)
                enrolledSubjects = result;
            else
                NavigationManager.NavigateTo("/single-student");
        }
    }
}
