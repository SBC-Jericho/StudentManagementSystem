
@page "/register-user"
@inject IClientStudentService ClientCharacterService
@inject IClientAuthService ClientAuthService
@inject ISnackbar Snackbar
@layout AuthLayout
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<h3>Register user</h3>

<EditForm Model="user" OnValidSubmit="HandleSubmit">

    <DataAnnotationsValidator />
    <MudCard>
        <MudCardContent>
            <MudTextField 
                Label="Email"
                Variant="Variant.Outlined"
                @bind-Value="user.Email"
                For="@(() => user.Email)"
                OnlyValidateIfDirty="true" 
            />

            <MudTextField 
                Label="Password"
                Variant="Variant.Outlined"
                InputType="@PasswordInput"
                Adornment="Adornment.End" 
                AdornmentIcon="@PasswordInputIcon"
                OnAdornmentClick="ShowPasswordButton"
                AdornmentAriaLabel="Show Password"
                @bind-Value="user.Password"
            />
            <ValidationMessage For="@(() => user.Password)" />

            <MudSelect 
                Label="Role"
                Variant="Variant.Outlined"
                @bind-Value="user.Role">
                <MudSelectItem Value="@("Admin")" />
                <MudSelectItem Value="@("Student")" />
                <MudSelectItem Value="@("Professor")" />
            </MudSelect>
            <ValidationMessage For="@(() => user.Role)" />

            @if (user.Role == "Admin")
            {

                <br />
                <InputFile id="fileInput" OnChange="OnFileChange" hidden />
                <MudButton HtmlTag="label"
                           Variant="Variant.Outlined"
                           Color="Color.Primary"
                           StartIcon="@Icons.Filled.CloudUpload"
                           for="fileInput">
                    Upload Image
                </MudButton>
                <br />
                <MudImage Src="@user.Avatar" Elevation="25" Class="rounded my-2"></MudImage>
                <br />
            }
            else if(user.Role == "Student")
            {
                <MudTextField 
                    Label="First Name"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.FirstName"
                    For="@(() => user.userDetailsDTO.FirstName)"
                />

                <MudTextField 
                     Label="Last Name"
                     Variant="Variant.Outlined"
                     @bind-Value="user.userDetailsDTO.LastName"
                     For="@(() => user.userDetailsDTO.LastName)"
                />

                <MudTextField 
                    Label="Contact"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.Contact"
                    For="@(() => user.userDetailsDTO.Contact)"
                />

                <MudTextField 
                    Label="Address"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.Address"
                    For="@(() => user.userDetailsDTO.Address)"
                />

                <MudDatePicker 
                Label="Birth Date"
                               @bind-Date="user.userDetailsDTO.BirthDate" />

                <br />
                <InputFile id="fileInput" OnChange="OnFileChange" hidden />
                <MudButton HtmlTag="label"
                Variant="Variant.Outlined"
                Color="Color.Primary"
                StartIcon="@Icons.Filled.CloudUpload"
                for="fileInput">
                    Upload Image
                </MudButton>
                <br />
                <MudImage 
                    Src="@user.userDetailsDTO.Image" 
                    Elevation="25" 
                    Class="rounded my-2"
                 />

                <br />
            }
            else if (user.Role == "Professor")
            {
                <MudTextField 
                    Label="First Name"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.FirstName"
                    For="@(() => user.userDetailsDTO.FirstName)"
                />

                <MudTextField 
                    Label="Last Name"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.LastName"
                    For="@(() => user.userDetailsDTO.LastName)"
                />

                <MudTextField 
                    Label="Contact"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.Contact"
                    For="@(() => user.userDetailsDTO.Contact)" 
                />

                <MudTextField 
                    Label="Address"
                    Variant="Variant.Outlined"
                    @bind-Value="user.userDetailsDTO.Address"
                    For="@(() => user.userDetailsDTO.Address)"
                />

                <MudDatePicker Label="Birth Date"
                               @bind-Date="user.userDetailsDTO.BirthDate" />

                <br />

                <InputFile id="fileInput" OnChange="OnFileChange" hidden />

                <MudButton 
                    HtmlTag="label"
                    Variant="Variant.Filled"
                    Color="Color.Primary"
                    StartIcon="@Icons.Filled.CloudUpload"
                    for="fileInput">
                    Upload Image
                </MudButton>

                <br />

                <MudImage 
                    Src="@user.userDetailsDTO.Image" 
                    Elevation="25" 
                    Class="rounded my-2"
                />

                <br />
            }

            <MudButton 
                ButtonType="ButtonType.Submit" 
                Class="mt-4" Color="Color.Primary"
                Variant="Variant.Filled">
                Register
            </MudButton>
        
            <MudButton 
                OnClick="Home"
                Class="mt-4" Color="Color.Primary"
                Variant="Variant.Filled">
                Home
            </MudButton>

        </MudCardContent>
    </MudCard>

    <p style="height:500px;"></p>

</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    userDTO user = new userDTO();

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPasswordButton()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }


    async Task HandleSubmit()
    {
        if (Id is null)
        {
            await ClientAuthService.Register(user);
            NavigationManager.NavigateTo("all-user");

            Snackbar.Add(
            "Registration Successful",
            Severity.Success,
            config =>
            {
                config.ShowTransitionDuration = 200;
                config.HideTransitionDuration = 400;
                config.VisibleStateDuration = 2500;
            });
        }

    }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 200, 200);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        user.userDetailsDTO.Image = imageData;
        user.Avatar = imageData;

    }

    private void NavigateLogin()
    {
        NavigationManager.NavigateTo("login");

    }

    private void Home() 
    {
        NavigationManager.NavigateTo("all-user");
    }

}
