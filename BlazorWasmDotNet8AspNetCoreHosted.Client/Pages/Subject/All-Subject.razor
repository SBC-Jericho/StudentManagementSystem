@page "/all-subject"
@inject IClientSubjectService ClientSubjectService
@inject NavigationManager NavigationManager
<PageTitle>Subjects</PageTitle>

<h3>Subjects</h3>

<MudTable Items="ClientSubjectService.ClientSubject" Hover="true" Striped="true" Dense="true" Class="mb-2">

    <HeaderContent>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd>
                <MudTd DataLabel="Edit">
                    <MudIconButton OnClick="(() => EditSubject(context.Id))"
                                   Icon="@Icons.Material.Filled.Edit"
                                   Color="Color.Primary"
                                   Variant="Variant.Filled">
                    </MudIconButton>
                </MudTd>
                <MudTd DataLabel="Delete">
                    <MudIconButton OnClick="(() => DeleteSubject(context.Id))"
                                   Icon="@Icons.Material.Filled.Delete"
                                   Color="Color.Error"
                                   Variant="Variant.Filled">
                    </MudIconButton>
                </MudTd>
            </MudTd>
        </RowTemplate>

    </MudTable>

    <MudButton @onclick=CreateNewSubject Color="Color.Primary" Variant="Variant.Filled">Add Subject</MudButton>


    @code {

    // lifecycle method
    protected override async Task OnInitializedAsync()
    {
        await ClientSubjectService.GetAllSubject();
    }

    void EditSubject(int id)
    {
        //Navigate the user to another page - inject  NavigationManager NavigationManager
        NavigationManager.NavigateTo($"single-subject/{id}");
    }

    void CreateNewSubject()
    {
        NavigationManager.NavigateTo("single-subject");
    }

    async Task DeleteSubject(int id)
    {
        await ClientSubjectService.DeleteSubject(id);
    }
}
